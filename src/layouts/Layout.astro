---
import "@/styles/global.css";
import "@fontsource-variable/inter";
import ModeToggle from "@/components/ModeToggle.astro";

interface Props {
  metadata?: {
    title?: string;
    description?: string;
  };
}

const { metadata } = Astro.props;

const title = metadata?.title || "webdevtoolkit";
const description =
  metadata?.description ||
  "Collection of essential resources to assist with web development. Find the perfect tools to enhance your projects and daily work.";
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <meta name="description" content={description} />

    <script
      is:inline
      src="https://analytics.ahrefs.com/analytics.js"
      data-key="WD1roQGMkBqK/KttiSTbvw"
      async></script>
  </head>
  <body>
    <header class="border-b">
      <div class="flex items-center gap-8 px-8 py-6">
        <h1 class="text-xl font-bold">
          <a href="/">webdevtoolkit</a>
        </h1>
        <div class="flex items-center gap-8">
          <a class="font-medium hover:opacity-75" href="/tools">Tools</a>
        </div>
        <div class="ml-auto flex items-center gap-8">
          <ModeToggle />
        </div>
      </div>
    </header>

    <slot />
  </body>
</html>

<script is:inline>
  const getThemePreference = () => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    return window.matchMedia("(prefers-color-scheme: dark)").matches
      ? "dark"
      : "light";
  };
  const isDark = getThemePreference() === "dark";
  document.documentElement.classList[isDark ? "add" : "remove"]("dark");

  if (typeof localStorage !== "undefined") {
    const observer = new MutationObserver(() => {
      const isDark = document.documentElement.classList.contains("dark");
      localStorage.setItem("theme", isDark ? "dark" : "light");
    });
    observer.observe(document.documentElement, {
      attributes: true,
      attributeFilter: ["class"],
    });
  }
</script>
